# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Priority {
  id: ID!
  description: String!
  priority_history: [PriorityHistory!]!
}

type TicketStatus {
  id: ID!
  description: String!
  status_history: [StatusHistory!]!
}

type StatusHistory {
  id: ID!
  its: DateTime!
  author_id: ID!
  ticket_id: ID!
  status_id: ID!
  user_account: User!
  ticket: Ticket!
  ticket_status: TicketStatus!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Subscription {
  id: ID!
  user_account: User
  ticket: Ticket
  its: DateTime
  dts: DateTime
}

type Dependency {
  id: ID!
  name: String!
  is_operationg: Boolean!
  problematica: [Issue!]!
  works_at: [User!]!
}

type Issue {
  id: ID!
  description: String!
  code: String!
  enabled: Boolean!
  dependency_id: ID
  dependency: [Dependency!]!
  ticket: [Ticket!]!
}

type Ticket {
  id: ID!
  description: String
  latitude: Float
  longitude: Float
  timestamp: DateTime!
  image_url: String
  issue: Issue
  its: DateTime
  uts: DateTime
  dts: DateTime
  priority_history: [PriorityHistory!]!
  status_history: [StatusHistory!]!
  subscription: [Subscription!]!
  author: User
  current_status: TicketStatus
  dependency: Dependency
  current_priority: Priority
  scheduled_resolution_at: DateTime
}

type PriorityHistory {
  id: ID!
  author_id: ID
  ticket_id: ID
  priority: Priority
  user_account: User
  ticket: Ticket
  its: DateTime
}

type Role {
  id: ID!
  description: String!
  user_account: [User!]!
}

type PenaltyType {
  id: ID!
  code: String!
  description: String!
  user_penalty: [UserPenalty!]!
}

type UserPenalty {
  id: Int!
  penalty_type_id: Int
  date: DateTime!
  user_id: ID
  penalty_type: PenaltyType
  user_account: User
}

type WorksAt {
  id: Int!
  user_id: ID!
  dependency_id: Int!
  started: DateTime
  ended: DateTime
  dependency: Dependency!
  user_account: User!
}

type User {
  id: ID!
  auth_provider_id: ID!
  dni: String!
  email: String!
  email_alt: String
  first_name: String!
  last_name: String!
  birth_date: DateTime!
  postal_code: Int
  street: String
  street_number: Int
  is_resident: Boolean
  role_id: Int!
  its: DateTime
  uts: DateTime
  dts: DateTime
  role: Role!
  priority_history: [PriorityHistory!]!
  status_history: [StatusHistory!]!
  subscription: [Subscription!]!
  user_penalty: [UserPenalty!]!
  works_at: [WorksAt!]!
}

type Query {
  findAll: [User!]!
  ticketAuthor(id: String!): UserResult!
  user(id: String!): UserResult!
  findOneByToken: UserResult!
  findTickets(filter: TicketFilterInput): [Ticket!]!
  tickets: [Ticket!]!
  ticket(id: String!): Ticket!
  countTickets(filter: TicketFilterInput): Float!
  getSubscriptions(input: GetSubscriptionsInput!): [Subscription!]!
  ticketStatus: [TicketStatusResult!]!
  ticketStatusHistory(id: String!): [StatusHistory!]!
  findAllIssues: [Issue!]!
}

union UserResult = User | ErrorResponse

type ErrorResponse {
  message: String!
  code: String
  path: String
}

input TicketFilterInput {
  user_id: ID
  status_id: Int
  priority_id: Int
  dependency_id: Int
  page: Int
  limit: Int
  ticket_id: ID
}

input GetSubscriptionsInput {
  ticketId: ID
  active: Boolean
}

union TicketStatusResult = TicketStatus | ErrorResponse

type Mutation {
  lazySyncUser(input: LazySyncUserInput!): UserResult!
  createTicket(input: CreateTicketInput!): TicketResult!
  updateTicket(updateTicketInput: UpdateTicketInput!): Ticket!
  removeTicket(id: String!): Ticket!
  subscribe(input: CreateSubscriptionInput!): Subscription!
  unsubscribe(input: DeleteSubscriptionInput!): Subscription!
}

input LazySyncUserInput {
  auth_provider_id: ID!
}

union TicketResult = Ticket | ErrorResponse

input CreateTicketInput {
  description: String!
  latitude: Float!
  longitude: Float!
  imageUrl: String
  statusId: Int
  priorityId: Int
  issueId: Int!
}

input UpdateTicketInput {
  description: String
  latitude: Float
  longitude: Float
  imageUrl: String
  statusId: Int
  priorityId: Int
  issueId: Int
  id: ID!
  scheduledResolutionAt: DateTime
}

input CreateSubscriptionInput {
  ticketId: ID!
}

input DeleteSubscriptionInput {
  subscriptionId: ID
  ticketId: ID
}